version: '3.5'

services:

  # mysql:
  #   image: mysql:5.7
  #   command:
  #     --default-authentication-plugin=mysql_native_password
  #   restart: on-failure
  #   volumes:
  #     - ./.mysqldb/:/var/lib/mysql
  #   ports:
  #     - 3310:3306
  #   environment:
  #     MYSQL_DATABASE: 'food_stories'
  #     MYSQL_ROOT_PASSWORD: '1'

  postgres:
    container_name: postgres
    image: postgres:12.1
    env_file: 
      - .env
    volumes:
      - ./.postgresdb/:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    restart: on-failure

  web:
    build: .
    restart: "always"
    ports:
      - "8000:8000"
    volumes:
      - .:/code/
    depends_on:
      - "postgres"

  # pgadmin:
  #   container_name: pgadmin
  #   image: dpage/pgadmin4:4.16
  #   env_file: 
  #     - .env
  #   volumes:
  #     - ./.pgadmin:/root/.pgadmin
  #   ports:
  #     - "${PGADMIN_DEFAULT_PORT}:80"
  #   restart: on-failure

  redis:
    container_name: redis
    image: redis:rc-buster
    ports:
      - "6379:6379"
    restart: on-failure
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis

#   mongo:
#     container_name: mongo
#     image: mongo:4.0.14-xenial
#     restart: on-failure
#     env_file: 
#       - .env
#     ports:
#       - ${MONGO_INITDB_PORT}:27017
#     volumes: 
#       - ./.init-mongo.js:/docker-entrypoint-initdb.d/init-mongo-js:ro
#       - ./.mongodb:/data/db

#   mongo-express:
#     container_name: mongo-express
#     image: mongo-express:0.49.0
#     restart: on-failure
#     ports:
#       - ${ME_CONFIG_PORT}:8081
#     env_file: 
#       - .env
#     depends_on: 
#       - mongo


# volumes:
#   postgres:
#   pgadmin:
#   mongo: